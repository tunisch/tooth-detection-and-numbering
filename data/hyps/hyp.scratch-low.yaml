# Ultralytics üöÄ AGPL-3.0 License - https://ultralytics.com/license

# Hyperparameters for low-augmentation COCO training from scratch
# python train.py --batch 64 --cfg yolov5n6.yaml --weights '' --data coco.yaml --img 640 --epochs 300 --linear
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials

lr0: 0.005 # initial learning rate (SGD=1E-2, Adam=1E-3)
lrf: 0.1 # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.937 # SGD momentum/Adam beta1
weight_decay: 0.0005 # optimizer weight decay 5e-4
warmup_epochs: 3.0 # warmup epochs (fractions ok)
warmup_momentum: 0.8 # warmup initial momentum
warmup_bias_lr: 0.1 # warmup initial bias lr
box: 0.05 # box loss gain
cls: 0.3 # cls loss gain
cls_pw: 1.0 # cls BCELoss positive_weight
obj: 1.0 # obj loss gain (scale with pixels)
obj_pw: 1.0 # obj BCELoss positive_weight
iou_t: 0.35 # IoU training threshold
anchor_t: 4.0 # anchor-multiple threshold
anchors: 6  # anchors per output layer (0 to ignore)
fl_gamma: 0.0 # focal loss gamma (efficientDet default gamma=1.5)
hsv_h: 0.0 # image HSV-Hue augmentation (fraction) (Siyah-beyaz g√∂r√ºnt√ºlerde anlamƒ± yok ‚Äî sadele≈ütirmek gerek	)
hsv_s: 0.0 # image HSV-Saturation augmentation (fraction) ( Siyah-beyaz g√∂r√ºnt√ºlerde anlamƒ± yok ‚Äî sadele≈ütirmek gerek	)
hsv_v: 0.2 # image HSV-Value augmentation (fraction) (Siyah-beyaz g√∂r√ºnt√ºlerde anlamƒ± yok ‚Äî sadele≈ütirmek gerek	)
degrees: 0.0 # image rotation (+/- deg)
translate: 0.05 # image translation (+/- fraction)
scale: 0.2 # image scale (+/- gain) (Fazla y√ºksek ‚Äî di≈üler √ßok k√º√ß√ºl√ºp anlamsƒ±z hale gelir)
shear: 0.0 # image shear (+/- deg)
perspective: 0.0 # image perspective (+/- fraction), range 0-0.001
flipud: 0.0 # image flip up-down (probability)
fliplr: 0.0 # image flip left-right (probability) (dislerin yonu degismemeli)
mosaic: 0.9 # image mosaic (probability)
mixup: 0.0 # image mixup (probability) (dental icin gereksiz baglami bozar)
copy_paste: 0.0 # segment copy-paste (probability)
